import mongoose from 'mongoose';
import bcrypt from 'bcryptjs';
import dotenv from 'dotenv';

// ุชุญููู ูุชุบูุฑุงุช ุงูุจูุฆุฉ
dotenv.config();

async function main() {
  try {
    console.log('๐ ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช...');
    await mongoose.connect(process.env.MONGODB_URI || '');
    console.log('โ ุชู ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช ุจูุฌุงุญ');

    // ุงูุญุตูู ุนูู ูุนุฑูู ุงููุดุฑู
    const adminId = '67d9b12f885ca0a48b6957fb'; // ูุฐุง ูู ุงููุนุฑูู ูู ุงูุฑุณุงูุฉ ุงูุชุตุญูุญูุฉ
    console.log(`๐ ุชุญุฏูุซ ูููุฉ ูุฑูุฑ ุงููุดุฑู ุจุงููุนุฑูู: ${adminId}`);

    // ุชุดููุฑ ูููุฉ ุงููุฑูุฑ "admin" ูุจุงุดุฑุฉ
    const salt = await bcrypt.genSalt(10);
    const hashedPassword = await bcrypt.hash('admin', salt);
    console.log(`๐ ูููุฉ ุงููุฑูุฑ ุงููุดูุฑุฉ ุงูุฌุฏูุฏุฉ: ${hashedPassword}`);

    // ุชุญุฏูุซ ูููุฉ ุงููุฑูุฑ ูุจุงุดุฑุฉ ูู ูุงุนุฏุฉ ุงูุจูุงูุงุช ุฏูู ุงุณุชุฎุฏุงู ุงููููุฐุฌ
    // ูุฐุง ูุชุฌุงูุฒ ุฃู ููู pre-save ููุถุน ูููุฉ ุงููุฑูุฑ ุงููุดูุฑุฉ ูุจุงุดุฑุฉ
    const result = await mongoose.connection.db.collection('admins').updateOne(
      { _id: new mongoose.Types.ObjectId(adminId) },
      { $set: { password: hashedPassword } }
    );

    console.log(`๐ ูุชูุฌุฉ ุงูุชุญุฏูุซ: ${result.modifiedCount > 0 ? 'ุชู ุงูุชุญุฏูุซ ุจูุฌุงุญ โ' : 'ูุดู ุงูุชุญุฏูุซ โ'}`);
  } catch (error) {
    console.error('โ ุญุฏุซ ุฎุทุฃ:', error);
  } finally {
    await mongoose.disconnect();
    console.log('๐ ุชู ุงูุงูุชูุงุก ูู ุงูุนูููุฉ');
  }
}

main(); 